[versions]
android_plugin = "8.1.0"
kotlin = "1.8.20"
kotlin_datetime = "0.4.0"
kotlin_coroutines = "1.7.2"
odyssey = "1.3.3"
compose = "1.4.0"
koin = "3.4.2"
koin_compose = "3.4.1"
sqldelight = "1.5.5"
firebase = "32.2.2"
chucker = "3.5.2"
kviewmodel = "0.14"
ktor = "2.3.3"
koalaplot = "0.3.0"
serialization = "1.5.1"
detekt = "1.23.0"
google_services = "4.3.15"
firebase_crashlytics = "2.9.8"
slf4j = "1.7.36"
settings = "1.0.0"
buildkonfig = "0.13.3"
resources = "0.23.0"
resourcesGraphics = "0.9.0"
uuid = "0.6.0"
amplitude_java = "1.10.0"
amplitude_android = "1.5.2"
detekt_compose_rules = "1.2.2"
leakcanary = "2.12"
napier = "2.6.1"
datepicker_desktop = "11.2.1"
paging = "3.1.1-0.3.1"
json = "20211205"
lottie = "6.1.0"
googleServicesAuth = "20.6.0"
immutableCollections = "0.3.5"
imageloader = "1.4.0"
arithmetic-evaluator = "0.15.0"
bignum = "0.3.8"
nativecoroutines = "0.13.3"
moko_kswift = "0.6.1"
documentfile = "1.0.1"

[libraries]
gradleplugins-android = { module = "com.android.tools.build:gradle", version.ref = "android_plugin" }
gradleplugins-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradleplugins-compose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose" }
gradleplugins-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
gradleplugins-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
gradleplugins-google-services = { module = "com.google.gms:google-services", version.ref = "google_services" }
gradleplugins-firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "firebase_crashlytics" }
gradleplugins-sqldelight = { module = "com.squareup.sqldelight:gradle-plugin", version.ref = "sqldelight" }
gradleplugins-buildkonfig = { module = "com.codingfeline.buildkonfig:buildkonfig-gradle-plugin", version.ref = "buildkonfig" }
gradleplugins-resources = { module = "dev.icerock.moko:resources-generator", version.ref = "resources" }
gradleplugins-nativecoroutines = { module = "com.rickclephas.kmp.nativecoroutines:com.rickclephas.kmp.nativecoroutines.gradle.plugin", version.ref = "nativecoroutines" }
gradleplugins-kswift = { module = "dev.icerock.moko:kswift-gradle-plugin", version.ref = "moko_kswift" }

paging = { module = "app.cash.paging:paging-common", version.ref = "paging" }

odyssey-core = { module = "io.github.alexgladkov:odyssey-core", version.ref = "odyssey" }
odyssey-compose = { module = "io.github.alexgladkov:odyssey-compose", version.ref = "odyssey" }

kviewmodel = { module = "com.adeo:kviewmodel", version.ref = "kviewmodel" }
kviewmodel-compose = { module = "com.adeo:kviewmodel-compose", version.ref = "kviewmodel" }
kviewmodel-odyssey = { module = "com.adeo:kviewmodel-odyssey", version.ref = "kviewmodel" }

compose-animation = { module = "androidx.compose.animation:animation", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin_compose" }

sqldelight-android = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-jvm = { module = "com.squareup.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-ios = { module = "com.squareup.sqldelight:native-driver", version.ref = "sqldelight" }

datepicker-desktop = { module = "com.github.lgooddatepicker:LGoodDatePicker", version.ref = "datepicker_desktop" }

napier = { module = "io.github.aakira:napier", version.ref = "napier" }

serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }

leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }

ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-android = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-jvm = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-ios = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

chucker-release = { module = "com.github.chuckerteam.chucker:library-no-op", version.ref = "chucker" }
chucker-debug = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker" }

koalaplot = { module = "io.github.koalaplot:koalaplot-core", version.ref = "koalaplot" }

detekt-cli = { module = "io.gitlab.arturbosch.detekt:detekt-cli", version.ref = "detekt" }
detekt-rules-compose = { module = "ru.kode:detekt-rules-compose", version.ref = "detekt_compose_rules" }

slf4j = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }

json = { module = "org.json:json", version.ref = "json" }

amplitude-java = { module = "com.amplitude:java-sdk", version.ref = "amplitude_java" }
amplitude-android = { module = "com.amplitude:analytics-android", version.ref = "amplitude_android" }

settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }
settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "settings" }

uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }

kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlin_datetime" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin_coroutines" }

mokoResources-core = { module = "dev.icerock.moko:resources", version.ref = "resources" }
mokoResources-graphics = { module = "dev.icerock.moko:graphics", version.ref = "resourcesGraphics" }
mokoResources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "resources" }

lottie = { module = "com.airbnb.android:lottie-compose", version.ref = "lottie" }

googleServicesAuth = { module = "com.google.android.gms:play-services-auth", version.ref = "googleServicesAuth" }

immutableCollections = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "immutableCollections" }

imageloader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "imageloader" }

arithmeticEvaluator = { module = "io.github.murzagalin:multiplatform-expressions-evaluator", version.ref = "arithmetic-evaluator" }

bignum = { module = "com.ionspin.kotlin:bignum", version.ref = "bignum" }

documentfile = { module = "androidx.documentfile:documentfile", version.ref = "documentfile" }

[bundles]
odyssey = ["odyssey-core", "odyssey-compose"]
compose = ["compose-animation", "compose-foundation", "compose-material", "compose-ui"]
koin-android = ["koin-android", "koin-compose"]
kviewmodel-compose = ["kviewmodel-compose", "kviewmodel-odyssey"]
ktor = ["ktor-core", "ktor-contentNegotiation", "ktor-serialization", "ktor-logging"]
settings = ["settings", "settings-coroutines"]